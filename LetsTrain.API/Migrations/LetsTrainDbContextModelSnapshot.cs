// <auto-generated />
using System;
using LetsTrain.API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LetsTrain.API.Migrations
{
    [DbContext(typeof(LetsTrainDbContext))]
    partial class LetsTrainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunosAulas", b =>
                {
                    b.Property<int>("AlunosId")
                        .HasColumnType("int");

                    b.Property<int>("AulasId")
                        .HasColumnType("int");

                    b.HasKey("AlunosId", "AulasId");

                    b.HasIndex("AulasId");

                    b.ToTable("AlunosAulas");
                });

            modelBuilder.Entity("Aulas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessoresId")
                        .HasColumnType("int");

                    b.Property<int>("QuantMaximaAlunos")
                        .HasColumnType("int");

                    b.Property<int?>("RecorrenciaEmDias")
                        .HasColumnType("int");

                    b.Property<int>("TreinosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessoresId");

                    b.HasIndex("TreinosId");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AlturaEmM")
                        .HasColumnType("real");

                    b.Property<int>("DiaVencimentoMatricula")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graduacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PesoEmKg")
                        .HasColumnType("real");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Exercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int?>("TreinosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreinosId");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Professores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graduacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Treinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DuracaoEmMinutos")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessoresId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessoresId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("AlunosAulas", b =>
                {
                    b.HasOne("LetsTrain.API.Model.Alunos", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aulas", null)
                        .WithMany()
                        .HasForeignKey("AulasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aulas", b =>
                {
                    b.HasOne("LetsTrain.API.Model.Professores", "Professores")
                        .WithMany("Aulas")
                        .HasForeignKey("ProfessoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LetsTrain.API.Model.Treinos", "Treinos")
                        .WithMany()
                        .HasForeignKey("TreinosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professores");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Exercicios", b =>
                {
                    b.HasOne("LetsTrain.API.Model.Treinos", null)
                        .WithMany("Exercicios")
                        .HasForeignKey("TreinosId");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Treinos", b =>
                {
                    b.HasOne("LetsTrain.API.Model.Professores", null)
                        .WithMany("Treinos")
                        .HasForeignKey("ProfessoresId");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Professores", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("LetsTrain.API.Model.Treinos", b =>
                {
                    b.Navigation("Exercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
